/**
 * @fileoverview gRPC-Web generated client stub for api
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: api/relay.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_api_annotations_pb = require('../google/api/annotations_pb.js')

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js')
const proto = {};
proto.api = require('./relay_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.api.RelayServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.api.RelayServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.api.ListRelaysRequest,
 *   !proto.api.ListRelaysResponse>}
 */
const methodDescriptor_RelayService_List = new grpc.web.MethodDescriptor(
  '/api.RelayService/List',
  grpc.web.MethodType.UNARY,
  proto.api.ListRelaysRequest,
  proto.api.ListRelaysResponse,
  /**
   * @param {!proto.api.ListRelaysRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.api.ListRelaysResponse.deserializeBinary
);


/**
 * @param {!proto.api.ListRelaysRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.api.ListRelaysResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.api.ListRelaysResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.api.RelayServiceClient.prototype.list =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/api.RelayService/List',
      request,
      metadata || {},
      methodDescriptor_RelayService_List,
      callback);
};


/**
 * @param {!proto.api.ListRelaysRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.api.ListRelaysResponse>}
 *     Promise that resolves to the response
 */
proto.api.RelayServicePromiseClient.prototype.list =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/api.RelayService/List',
      request,
      metadata || {},
      methodDescriptor_RelayService_List);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.api.AddRelayDeviceRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_RelayService_AddDevice = new grpc.web.MethodDescriptor(
  '/api.RelayService/AddDevice',
  grpc.web.MethodType.UNARY,
  proto.api.AddRelayDeviceRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.api.AddRelayDeviceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.api.AddRelayDeviceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.api.RelayServiceClient.prototype.addDevice =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/api.RelayService/AddDevice',
      request,
      metadata || {},
      methodDescriptor_RelayService_AddDevice,
      callback);
};


/**
 * @param {!proto.api.AddRelayDeviceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.api.RelayServicePromiseClient.prototype.addDevice =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/api.RelayService/AddDevice',
      request,
      metadata || {},
      methodDescriptor_RelayService_AddDevice);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.api.RemoveRelayDeviceRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_RelayService_RemoveDevice = new grpc.web.MethodDescriptor(
  '/api.RelayService/RemoveDevice',
  grpc.web.MethodType.UNARY,
  proto.api.RemoveRelayDeviceRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.api.RemoveRelayDeviceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.api.RemoveRelayDeviceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.api.RelayServiceClient.prototype.removeDevice =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/api.RelayService/RemoveDevice',
      request,
      metadata || {},
      methodDescriptor_RelayService_RemoveDevice,
      callback);
};


/**
 * @param {!proto.api.RemoveRelayDeviceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.api.RelayServicePromiseClient.prototype.removeDevice =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/api.RelayService/RemoveDevice',
      request,
      metadata || {},
      methodDescriptor_RelayService_RemoveDevice);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.api.ListRelayDevicesRequest,
 *   !proto.api.ListRelayDevicesResponse>}
 */
const methodDescriptor_RelayService_ListDevices = new grpc.web.MethodDescriptor(
  '/api.RelayService/ListDevices',
  grpc.web.MethodType.UNARY,
  proto.api.ListRelayDevicesRequest,
  proto.api.ListRelayDevicesResponse,
  /**
   * @param {!proto.api.ListRelayDevicesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.api.ListRelayDevicesResponse.deserializeBinary
);


/**
 * @param {!proto.api.ListRelayDevicesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.api.ListRelayDevicesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.api.ListRelayDevicesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.api.RelayServiceClient.prototype.listDevices =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/api.RelayService/ListDevices',
      request,
      metadata || {},
      methodDescriptor_RelayService_ListDevices,
      callback);
};


/**
 * @param {!proto.api.ListRelayDevicesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.api.ListRelayDevicesResponse>}
 *     Promise that resolves to the response
 */
proto.api.RelayServicePromiseClient.prototype.listDevices =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/api.RelayService/ListDevices',
      request,
      metadata || {},
      methodDescriptor_RelayService_ListDevices);
};


module.exports = proto.api;

